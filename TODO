* EASY:		remove the caches for local built rpms on mach clean
	        needs mach-helper changes though
* EASY:		add warning about missing stuff from .rpmmacros for signing
* EASY:		check for ending spaces in urlgrab, disallow
* EASY:		sign and collect packages at end of complete build
* EASY:		verify downloaded Sources and Patches for false downloads
* HARD:		figure out a good way to deal with /proc, because it's not safe
                for the host to have this
* KLUDGEY:      SuSE 7.3 and 8.0 setups, the problem is their ncurses package
                which has a %pre script that requires bash.  And bash requires
                libncurses.so.5 :/
* MEDIUM:	rpm -q --specfile shouldn't be used; it fails on %install
                and similar in Changelog entries
* MEDIUM:	make sure we don't rebuild binary rpms :)
* EASY:		allow people to specify an alternate location for a root
* EASY:		bash completion
* HARD:		integrate ccache building
* HARD:		integrate distcc support
* EASY:		make proc mounting an option, document the issues with it
* MEDIUM:	allow specification of multiple roots for multibuilding
* MEDIUM:	add e2fs target which makes the root into a filesystem file
* MEDIUM:	make output of rpm and apt-get and friends immediately available
* MEDIUM:	figure out what to do with check for release name mangling
                in the fedora.us fedora 1 case where "1" is used as disttag
* MEDIUM:	On FC1, "setup base" for RH 7.2 fails: /lib/libnss_files.so.2:
		symbol _nss_files_parse_grent, version GLIBC_2.0 not defined
		in file libc.so.6 with link time reference
		SuSE 8.1 would need the pam-modules package in "base" but
		installing it fails due to the same relocation error.
* MEDIUM:	"rpm -q --specfile" should be run inside the build root (or
		perhaps using "rpm --root" would suffice) in order to
		properly use distro/root specific macros.
* MEDIUM:	support building from tarballs (ie. "rpmbuild -tb ...")
* EASY:		add --arch tests
* EASY:		change --enable- to --with- in configure ?
* MEDIUM:	check if we can have the actual rpmbuild command use
	 	--root instead of doing it ourselves
* MEDIUM:	keep track of all buildrequires stuff so that we can try
                and install the right kernel- versions
* MEDIUM:	copy all non-downloaded Sources/Patches in the resultdir too
* MEDIUM:	spec file set to 600 owned by current user will be unreadable
	   	after copying to root:
  File "/usr/bin/mach", line 983, in rebuild
    shutil.copy2 (os.path.join (self.rootdir, 'tmp', specfile), resultdir)
* MEDIUM:	sanity-check conf files passed to mach-helper
* MEDIUM:       reverting to "build" state gets tricky if the build state
		has packages that now have upgrades available.  Currently,
		reverting will try to remove those, since they had older
		versions, then reinstall the same versions as part of an
		upgrade.  This may fail when these packages are rpm,
		glibc, ...
		Simulate this by setting up an f4c root, then rsyncing it
		to an f4e root, then upgrading, reverting and reupgrading.

* HARD:		rpm --aid

0) Create an /8.0/i386 mount point with all the packages for Red Hat 8.0.
You can use anything you want, I use /8.0/i386.

1) Install the rpmdb-redhat package from /8.0/i386.

2) Edit /etc/rpm/macros, and supply the path to the package.
Here's what I use
    %_solve_dbpath          /usr/lib/rpmdb/%{_arch}-%{_vendor}-%{_os}/redhat
    %_solve_pkgsdir         /8.0/i386/
    %_solve_name_fmt        %{?_solve_pkgsdir}%%{NAME}-%%{VERSION}-%%{RELEASE}.%%{ARCH}.rpm

That will make --aid functional.
