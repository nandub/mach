AC_INIT(README)

AS_VERSION(mach, MACH, 0, 4, 2, 1)
AC_SUBST(RELEASE, $MACH_RELEASE)

AC_SUBST_FILE(AUTHORS)
AUTHORS=$srcdir/AUTHORS

AM_INIT_AUTOMAKE($PACKAGE, $VERSION)
AC_SUBST(ACLOCAL_AMFLAGS, "-I m4")

AS_AC_EXPAND(SYSCONFDIR, $sysconfdir)
AC_MSG_NOTICE(Storing configuration files in $SYSCONFDIR)

AS_AC_EXPAND(LOCALSTATEDIR, $localstatedir)
AC_MSG_NOTICE(Using localstatedir $LOCALSTATEDIR)


dnl using ARG_WITH is maybe not the right thing to do but there doesn't seem
dnl to be a good alternative
dnl rootsdir
AC_ARG_WITH(rootsdir,
  AC_HELP_STRING([--enable-rootsdir=PATH], [create roots in PATH]),
  [ rootsdir=$withval ],
  [ rootsdir=$localstatedir/lib/mach/roots]
)
AS_AC_EXPAND(ROOTSDIR, $rootsdir)
AC_MSG_NOTICE(Using rootsdir $ROOTSDIR)

dnl archivesdir
AC_ARG_WITH(archivesdir,
  AC_HELP_STRING([--enable-archivesdir=PATH], [store archives in PATH]),
  [ archivesdir=$withval ],
  [ archivesdir=$localstatedir/cache/mach/archives]
)
AS_AC_EXPAND(ARCHIVESDIR, $archivesdir)
AC_MSG_NOTICE(Using archivesdir $ARCHIVESDIR)

dnl statesdir
AC_ARG_WITH(statesdir,
  AC_HELP_STRING([--enable-statesdir=PATH], [use states in PATH]),
  [ statesdir=$withval ],
  [ statesdir=$localstatedir/lib/mach/states]
)
AS_AC_EXPAND(STATESDIR, $statesdir)
AC_MSG_NOTICE(Using statesdir $STATESDIR)

AS_AC_EXPAND(SBINDIR, $sbindir)
AC_MSG_NOTICE(Placing mach-helper in $SBINDIR)

dnl check for C compiler
AC_PROG_CC

dnl check for python
AS_PATH_PYTHON(2.2)
if test "x$PYTHON" == "x"; then
  AC_MSG_ERROR(No suitable python version found)
fi

dnl output stuff
AC_OUTPUT(
Makefile
scripts/Makefile
scripts/mach
etc/Makefile
src/Makefile
etc/conf
mach.spec
)
